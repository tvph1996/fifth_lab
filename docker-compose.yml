services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9443:9443"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  gateway:
    image: traefik:v2.11
    restart: always
    command:
      - "--configFile=/etc/traefik/traefik.yml" 
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - ./security/traefik.yml:/etc/traefik/traefik.yml:ro,Z
      - ./security/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro,Z
      - ./security/certs/:/certs/:ro,Z
      - /var/run/docker.sock:/var/run/docker.sock:ro,Z

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    command: start-dev --import-realm
    environment:
      KC_DB: dev-file
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_RELATIVE_PATH: /
    volumes:
      - ./security/keycloak/realm-export.json:/opt/keycloak/data/import/realm.json:ro
    ports:
      - "8081:8080"


  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"

  grpc-service:
    build: ./grpc-service
    depends_on:
      - mongodb
    environment:
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_DB: itemsdb
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
    ports:
      - "50051:50051"
      - "9103:9103"

  rest-service:
    build: ./rest-service
    depends_on:
      - keycloak
      - grpc-service
      - otel-collector
    ports:
      - "5000:5000"
    environment:
      GRPC_HOST: grpc-service
      GRPC_PORT: 50051
      OTEL_EXPORTER_OTLP_ENDPOINT: "otel-collector:4317"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rest.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.rest.entrypoints=websecure"
      - "traefik.http.services.rest.loadbalancer.server.port=5000"
      - "traefik.http.routers.rest.tls=true"
      - "traefik.http.routers.rest.tls.certresolver=default"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./observability/grafana-provisioning:/etc/grafana/provisioning:ro,Z
      - grafana-data:/var/lib/grafana

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./observability/otel-collector-config.yml:/etc/otel-collector-config.yml:ro,Z
    ports:
      - "4317:4317"
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  grafana-data: {}
  portainer_data: {}
  
